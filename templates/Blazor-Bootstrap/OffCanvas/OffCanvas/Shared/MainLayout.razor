@inherits LayoutComponentBase

<nav class="navbar navbar-expand-md fixed-top navbar-dark bg-dark">
    <a class="navbar-brand" href="/">Offcanvas navbar</a>
    <button class="navbar-toggler p-0 border-0" type="button" data-toggle="offcanvas" @onclick="ToggleSideBar">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="navbar-collapse offcanvas-collapse @ToggleCss" id="navbarsExampleDefault">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="counter">
                    <span class="oi oi-plus" aria-hidden="true"></span> Counter
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>
            </li> 
        </ul> 
    </div>
</nav> 

<main role="main" class="container-fluid">
    @Body
</main>

@code{

    private string ToggleCss = "";

    private void ToggleSideBar()
    {
        ToggleCss = string.IsNullOrEmpty(ToggleCss) ? "open" : "";
    }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    protected override void OnInitialized()
    { 
        NavigationManager.LocationChanged += (o, e) =>
        {
            ToggleCss = "";
            StateHasChanged();
        };
    }

}